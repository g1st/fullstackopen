{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/phonebookService.js","App.js","index.js"],"names":["Filter","searchTerm","handleSearch","type","value","onChange","PersonForm","handleSubmit","newName","setNewName","phoneNumber","setPhoneNumber","onSubmit","event","target","Persons","persons","Notification","message","setState","error","setTimeout","className","person","axios","post","then","res","data","id","delete","newPerson","put","App","useState","setPersons","setSearchTerm","setMessage","setError","useEffect","get","personsData","regExp","RegExp","filter","name","match","map","key","number","onClick","window","confirm","phonebookService","personsArr","p","catch","alert","preventDefault","some","find","newPersonsArray","e","err","response","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b9d7389.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ searchTerm, handleSearch }) => {\n  return (\n    <div>\n      filter shown with{' '}\n      <input type=\"text\" value={searchTerm} onChange={handleSearch} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = ({\n  handleSubmit,\n  newName,\n  setNewName,\n  phoneNumber,\n  setPhoneNumber\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name:{' '}\n        <input\n          value={newName}\n          onChange={event => setNewName(event.target.value)}\n        />\n      </div>\n      <div>\n        number:{' '}\n        <input\n          type=\"tel\"\n          value={phoneNumber}\n          onChange={event => setPhoneNumber(event.target.value)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Persons = ({ persons }) => <ul>{persons}</ul>;\n\nexport default Persons;\n","import React from 'react';\n\nconst Notification = ({ message, setState, error }) => {\n  setTimeout(() => {\n    setState(null);\n  }, 5000);\n\n  return (\n    <div className={`notification ${error ? 'error' : ''}`}>{message}</div>\n  );\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst baseUrl = `/api/persons`;\n\nconst addPerson = person => axios.post(baseUrl, person).then(res => res.data);\n\nconst deletePerson = id =>\n  axios.delete(`${baseUrl}/${id}`).then(res => res.data);\n\nconst updatePerson = (id, newPerson) =>\n  axios.put(`${baseUrl}/${id}`, newPerson).then(res => res.data);\n\nexport default { addPerson, deletePerson, updatePerson };\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport phonebookService from './services/phonebookService';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [message, setMessage] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    axios.get('/api/persons').then(res => {\n      setPersons(res.data);\n    });\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const newPerson = {\n      name: newName,\n      number: phoneNumber\n    };\n    if (persons.some(person => person.name === newName)) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        const { id } = persons.find(p => p.name === newName);\n        return phonebookService\n          .updatePerson(id, newPerson)\n          .then(() => {\n            const newPersonsArray = persons.map(p =>\n              p.id === id ? { ...newPerson, id } : p\n            );\n            setPersons(newPersonsArray);\n            setNewName('');\n            setPhoneNumber('');\n          })\n          .catch(e => {\n            const err = e.response.data;\n            if (err) {\n              return setError(err.error.message);\n            }\n            setError(\n              `Information of ${newPerson.name} has already been removed from server`\n            );\n          });\n      }\n    } else {\n      phonebookService\n        .addPerson(newPerson)\n        .then(data => {\n          setPersons(persons.concat(data));\n          setMessage(`${newName} has been added`);\n          setNewName('');\n          setPhoneNumber('');\n        })\n        .catch(e => {\n          const err = e.response.data;\n          if (err) {\n            return setError(err.error.message);\n          }\n          alert(`${newPerson.name} is already in phonebook.`);\n        });\n    }\n  };\n\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n    personsData();\n  };\n\n  const handleDelete = (id, name) => () => {\n    if (window.confirm(`Delete ${name}`)) {\n      phonebookService\n        .deletePerson(id)\n        .then(() => {\n          const personsArr = persons.filter(p => p.id !== id);\n          setPersons(personsArr);\n        })\n        .catch(() => alert(`Element can't be removed.`));\n    }\n  };\n\n  const personsData = () => {\n    const regExp = new RegExp(searchTerm, 'i');\n    const personsToDisplay = persons.filter(person =>\n      person.name.match(regExp)\n    );\n\n    return personsToDisplay.map(person => (\n      <li key={person.name}>\n        {person.name} {person.number}{' '}\n        <button onClick={handleDelete(person.id, person.name)}>delete</button>\n      </li>\n    ));\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {message ? (\n        <Notification message={message} setState={setMessage} />\n      ) : null}\n      {error ? (\n        <Notification message={error} setState={setError} error />\n      ) : null}\n      <Filter\n        searchTerm={searchTerm}\n        setSearchTerm={setSearchTerm}\n        personsData={personsData}\n        handleSearch={handleSearch}\n      />\n      <h2>add a new</h2>\n      <PersonForm\n        handleSubmit={handleSubmit}\n        newName={newName}\n        setNewName={setNewName}\n        phoneNumber={phoneNumber}\n        setPhoneNumber={setPhoneNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personsData()} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}